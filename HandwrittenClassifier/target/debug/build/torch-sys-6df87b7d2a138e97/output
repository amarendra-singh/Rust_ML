cargo:rerun-if-env-changed=LIBTORCH_USE_PYTORCH
cargo:rerun-if-env-changed=LIBTORCH
cargo:rerun-if-env-changed=LIBTORCH_INCLUDE
cargo:rerun-if-env-changed=LIBTORCH_LIB
cargo:rerun-if-env-changed=LIBTORCH_BYPASS_VERSION_CHECK
cargo:rerun-if-env-changed=LIBTORCH_CXX11_ABI
cargo:rerun-if-env-changed=LIBTORCH_STATIC
cargo:rustc-link-search=native=C:\libtorch\lib
cargo:rerun-if-changed=libtch/torch_python.cpp
cargo:rerun-if-changed=libtch/torch_python.h
cargo:rerun-if-changed=libtch/torch_api_generated.cpp
cargo:rerun-if-changed=libtch/torch_api_generated.h
cargo:rerun-if-changed=libtch/torch_api.cpp
cargo:rerun-if-changed=libtch/torch_api.h
cargo:rerun-if-changed=libtch/stb_image_write.h
cargo:rerun-if-changed=libtch/stb_image_resize.h
cargo:rerun-if-changed=libtch/stb_image.h
OUT_DIR = Some(C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\build\torch-sys-6df87b7d2a138e97\out)
OPT_LEVEL = Some(0)
TARGET = Some(x86_64-pc-windows-msvc)
cargo:rerun-if-env-changed=VCINSTALLDIR
VCINSTALLDIR = None
cargo:rerun-if-env-changed=VSTEL_MSBuildProjectFullPath
VSTEL_MSBuildProjectFullPath = None
cargo:rerun-if-env-changed=VSCMD_ARG_VCVARS_SPECTRE
VSCMD_ARG_VCVARS_SPECTRE = None
cargo:rerun-if-env-changed=WindowsSdkDir
WindowsSdkDir = None
cargo:rerun-if-env-changed=WindowsSDKVersion
WindowsSDKVersion = None
cargo:rerun-if-env-changed=LIB
LIB = None
PATH = Some(C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\deps;C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug;C:\Users\MSI-PC\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib\rustlib\x86_64-pc-windows-msvc\lib;c:\Users\MSI-PC\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files (x86)\Microsoft\Edge\Application;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Space Acres\bin\;C:\Program Files\dotnet\;C:\Users\MSI-PC\AppData\Local\Microsoft\WindowsApps;c:\Users\MSI-PC\AppData\Local\Programs\cursor\resources\app\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\Stellar CLI;C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\bin\Hostx64\x64;C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\Tools;C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build;C:\libtorch\lib;C:\Users\MSI-PC\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\MSI-PC\AppData\Local\Programs\Python\Python313\;C:\Users\MSI-PC\.cargo\bin;C:\Users\MSI-PC\AppData\Local\Microsoft\WindowsApps;C:\Users\MSI-PC\AppData\Local\Programs\cursor\resources\app\bin;;C:\Users\MSI-PC\.rustup\toolchains\stable-x86_64-pc-windows-msvc\bin;C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\build\bzip2-sys-76fc65cf6029cb7e\out\lib;C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\build\ring-05418a384dfe4626\out;C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\build\zstd-sys-86b7a01f76f4893b\out)
cargo:rerun-if-env-changed=INCLUDE
INCLUDE = None
HOST = Some(x86_64-pc-windows-msvc)
cargo:rerun-if-env-changed=CXX_x86_64-pc-windows-msvc
CXX_x86_64-pc-windows-msvc = None
cargo:rerun-if-env-changed=CXX_x86_64_pc_windows_msvc
CXX_x86_64_pc_windows_msvc = None
cargo:rerun-if-env-changed=HOST_CXX
HOST_CXX = None
cargo:rerun-if-env-changed=CXX
CXX = None
cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
CRATE_CC_NO_DEFAULTS = None
CARGO_CFG_TARGET_FEATURE = Some(cmpxchg16b,fxsr,sse,sse2,sse3)
DEBUG = Some(true)
cargo:rerun-if-env-changed=CXXFLAGS
CXXFLAGS = None
cargo:rerun-if-env-changed=HOST_CXXFLAGS
HOST_CXXFLAGS = None
cargo:rerun-if-env-changed=CXXFLAGS_x86_64_pc_windows_msvc
CXXFLAGS_x86_64_pc_windows_msvc = None
cargo:rerun-if-env-changed=CXXFLAGS_x86_64-pc-windows-msvc
CXXFLAGS_x86_64-pc-windows-msvc = None
CARGO_ENCODED_RUSTFLAGS = Some()
cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
torch_api.cpp
torch_api_generated.cpp
cargo:warning=cl : Command line warning D9002 : ignoring unknown option '/p:DefineConstants=GLOG_USE_GLOG_EXPORT'
cargo:warning=cl : Command line warning D9002 : ignoring unknown option '/p:DefineConstants=GLOG_USE_GLOG_EXPORT'

cargo:warning=cl : Command line warning D9002 : ignoring unknown option '/p:DefineConstants=GLOG_USE_GLOG_EXPORT'
cargo:warning=cl : Command line warning D9002 : ignoring unknown option '/p:DefineConstants=GLOG_USE_GLOG_EXPORT'

C:\libtorch\include\ATen/core/ivalue_inl.h(934): warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc
C:\libtorch\include\ATen/core/ivalue_inl.h(934): warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc
libtch/torch_api.cpp(195): warning C4305: 'return': truncation from 'int' to 'bool'
libtch/torch_api.cpp(204): warning C4305: 'return': truncation from 'int' to 'bool'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(82): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(82): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\ATen/core/function_schema.h(438): note: see reference to function template instantiation 'std::optional<int32_t>::optional<const I,0>(_Ty2 &&) noexcept' being compiled
        with
        [
            I=size_t,
            _Ty2=size_t
        ]
C:\libtorch\include\ATen/core/function_schema.h(438): note: see the first reference to 'std::optional<int32_t>::optional' in 'c10::FunctionSchema::argumentIndexWithName'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(272): note: see reference to function template instantiation 'std::_Optional_construct_base<_Ty>::_Optional_construct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&)' being compiled
        with
        [
            _Ty=int32_t
        ]
libtch/torch_api.cpp(1672): note: see reference to function template instantiation 'std::_Optional_destruct_base<_Ty,true>::_Optional_destruct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&) noexcept' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(82): warning C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(82): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\ATen/core/function_schema.h(438): note: see reference to function template instantiation 'std::optional<int32_t>::optional<const I,0>(_Ty2 &&) noexcept' being compiled
        with
        [
            I=size_t,
            _Ty2=size_t
        ]
C:\libtorch\include\ATen/core/function_schema.h(438): note: see the first reference to 'std::optional<int32_t>::optional' in 'c10::FunctionSchema::argumentIndexWithName'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\optional(272): note: see reference to function template instantiation 'std::_Optional_construct_base<_Ty>::_Optional_construct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&)' being compiled
        with
        [
            _Ty=int32_t
        ]
libtch/torch_api_generated.cpp(18957): note: see reference to function template instantiation 'std::_Optional_destruct_base<_Ty,true>::_Optional_destruct_base<const unsigned __int64>(std::in_place_t,const unsigned __int64 &&) noexcept' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): warning C4267: 'initializing': conversion from 'size_t' to '_Ty', possible loss of data
        with
        [
            _Ty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(228): note: see reference to function template instantiation 'unsigned int &std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back<const _Ty&>(const _Ty &)' being compiled
        with
        [
            _Ty=size_t
        ]
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(228): note: see the first reference to 'std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back' in 'torch::dynamo::autograd::TensorArgs::lookup'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<const unsigned __int64&>(const unsigned __int64 &)' being compiled
        with
        [
            _Ty=std::_Vbase
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<const unsigned __int64&>(const unsigned __int64 &)' being compiled
        with
        [
            _Ty=std::_Vbase
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<unsigned int,const _Ty&>(unsigned int &,const _Ty &) noexcept' being compiled
        with
        [
            _Ty=size_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): warning C4267: 'initializing': conversion from 'size_t' to '_Objty', possible loss of data
        with
        [
            _Objty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): note: the template instantiation context (the oldest one first) is
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(848): note: see reference to function template instantiation 'unsigned int *std::vector<std::_Vbase,std::allocator<std::_Vbase>>::_Emplace_reallocate<const _Ty&>(unsigned int *const ,const _Ty &)' being compiled
        with
        [
            _Ty=size_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(900): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const unsigned __int64&>(_Alloc &,_Objty *const ,const unsigned __int64 &)' being compiled
        with
        [
            _Alloc=std::allocator<std::_Vbase>,
            _Ty=unsigned int,
            _Objty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): warning C4267: 'initializing': conversion from 'size_t' to '_Ty', possible loss of data
        with
        [
            _Ty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(647): note: see reference to function template instantiation 'int &std::vector<int32_t,std::allocator<int>>::emplace_back<size_t&>(size_t &)' being compiled
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(647): note: see the first reference to 'std::vector<int32_t,std::allocator<int>>::emplace_back' in 'torch::dynamo::autograd::CompiledNodeArgs::add_pre_hook'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&>(size_t &)' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&>(size_t &)' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<int,size_t&>(_Ty &,size_t &) noexcept' being compiled
        with
        [
            _Ty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): warning C4267: 'initializing': conversion from 'size_t' to '_Objty', possible loss of data
        with
        [
            _Objty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): note: the template instantiation context (the oldest one first) is
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(848): note: see reference to function template instantiation 'int *std::vector<int32_t,std::allocator<int>>::_Emplace_reallocate<size_t&>(int *const ,size_t &)' being compiled
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(900): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,size_t&>(_Alloc &,_Objty *const ,size_t &)' being compiled
        with
        [
            _Alloc=std::allocator<int>,
            _Ty=int,
            _Objty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): warning C4267: 'initializing': conversion from 'size_t' to '_Ty', possible loss of data
        with
        [
            _Ty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(228): note: see reference to function template instantiation 'unsigned int &std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back<const _Ty&>(const _Ty &)' being compiled
        with
        [
            _Ty=size_t
        ]
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(228): note: see the first reference to 'std::vector<std::_Vbase,std::allocator<std::_Vbase>>::emplace_back' in 'torch::dynamo::autograd::TensorArgs::lookup'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<const unsigned __int64&>(const unsigned __int64 &)' being compiled
        with
        [
            _Ty=std::_Vbase
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<const unsigned __int64&>(const unsigned __int64 &)' being compiled
        with
        [
            _Ty=std::_Vbase
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<unsigned int,const _Ty&>(unsigned int &,const _Ty &) noexcept' being compiled
        with
        [
            _Ty=size_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): warning C4267: 'initializing': conversion from 'size_t' to '_Objty', possible loss of data
        with
        [
            _Objty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): note: the template instantiation context (the oldest one first) is
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(848): note: see reference to function template instantiation 'unsigned int *std::vector<std::_Vbase,std::allocator<std::_Vbase>>::_Emplace_reallocate<const _Ty&>(unsigned int *const ,const _Ty &)' being compiled
        with
        [
            _Ty=size_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(900): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const unsigned __int64&>(_Alloc &,_Objty *const ,const unsigned __int64 &)' being compiled
        with
        [
            _Alloc=std::allocator<std::_Vbase>,
            _Ty=unsigned int,
            _Objty=unsigned int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): warning C4267: 'initializing': conversion from 'size_t' to '_Ty', possible loss of data
        with
        [
            _Ty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(647): note: see reference to function template instantiation 'int &std::vector<int32_t,std::allocator<int>>::emplace_back<size_t&>(size_t &)' being compiled
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(647): note: see the first reference to 'std::vector<int32_t,std::allocator<int>>::emplace_back' in 'torch::dynamo::autograd::CompiledNodeArgs::add_pre_hook'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&>(size_t &)' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&>(size_t &)' being compiled
        with
        [
            _Ty=int32_t
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<int,size_t&>(_Ty &,size_t &) noexcept' being compiled
        with
        [
            _Ty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): warning C4267: 'initializing': conversion from 'size_t' to '_Objty', possible loss of data
        with
        [
            _Objty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xmemory(732): note: the template instantiation context (the oldest one first) is
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(848): note: see reference to function template instantiation 'int *std::vector<int32_t,std::allocator<int>>::_Emplace_reallocate<size_t&>(int *const ,size_t &)' being compiled
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(900): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,size_t&>(_Alloc &,_Objty *const ,size_t &)' being compiled
        with
        [
            _Alloc=std::allocator<int>,
            _Ty=int,
            _Objty=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\utility(274): warning C4267: 'initializing': conversion from 'size_t' to '_Ty1', possible loss of data
        with
        [
            _Ty1=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\utility(274): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(641): note: see reference to function template instantiation 'std::pair<int,int> &std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back<size_t&,int&>(size_t &,int &)' being compiled
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(641): note: see the first reference to 'std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back' in 'torch::dynamo::autograd::CompiledNodeArgs::add_tensor_pre_hook'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&,int&>(size_t &,int &)' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&,int&>(size_t &,int &)' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<std::pair<int,int>,size_t&,int&>(_Ty &,size_t &,int &) noexcept' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: see reference to function template instantiation 'std::pair<int,int>::pair<uint64_t&,int&,0>(_Other1,_Other2) noexcept' being compiled
        with
        [
            _Other1=uint64_t &,
            _Other2=int &
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\utility(274): warning C4267: 'initializing': conversion from 'size_t' to '_Ty1', possible loss of data
        with
        [
            _Ty1=int
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\utility(274): note: the template instantiation context (the oldest one first) is
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(641): note: see reference to function template instantiation 'std::pair<int,int> &std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back<size_t&,int&>(size_t &,int &)' being compiled
C:\libtorch\include\torch/csrc/dynamo/compiled_autograd.h(641): note: see the first reference to 'std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>::emplace_back' in 'torch::dynamo::autograd::CompiledNodeArgs::add_tensor_pre_hook'
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(924): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_back<size_t&,int&>(size_t &,int &)' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(845): note: see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<size_t&,int&>(size_t &,int &)' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\vector(860): note: see reference to function template instantiation 'void std::_Construct_in_place<std::pair<int,int>,size_t&,int&>(_Ty &,size_t &,int &) noexcept' being compiled
        with
        [
            _Ty=std::pair<int,int>
        ]
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.44.35207\include\xutility(476): note: see reference to function template instantiation 'std::pair<int,int>::pair<uint64_t&,int&,0>(_Other1,_Other2) noexcept' being compiled
        with
        [
            _Other1=uint64_t &,
            _Other2=int &
        ]
exit code: 0
exit code: 0
cargo:rerun-if-env-changed=AR_x86_64-pc-windows-msvc
AR_x86_64-pc-windows-msvc = None
cargo:rerun-if-env-changed=AR_x86_64_pc_windows_msvc
AR_x86_64_pc_windows_msvc = None
cargo:rerun-if-env-changed=HOST_AR
HOST_AR = None
cargo:rerun-if-env-changed=AR
AR = None
cargo:rerun-if-env-changed=ARFLAGS
ARFLAGS = None
cargo:rerun-if-env-changed=HOST_ARFLAGS
HOST_ARFLAGS = None
cargo:rerun-if-env-changed=ARFLAGS_x86_64_pc_windows_msvc
ARFLAGS_x86_64_pc_windows_msvc = None
cargo:rerun-if-env-changed=ARFLAGS_x86_64-pc-windows-msvc
ARFLAGS_x86_64-pc-windows-msvc = None
cargo:rustc-link-lib=static=tch
cargo:rustc-link-search=native=C:\WorkStation\Projects\Rust\Rust_ML\HandwrittenClassifier\target\debug\build\torch-sys-6df87b7d2a138e97\out
cargo:rerun-if-env-changed=CXXSTDLIB_x86_64-pc-windows-msvc
CXXSTDLIB_x86_64-pc-windows-msvc = None
cargo:rerun-if-env-changed=CXXSTDLIB_x86_64_pc_windows_msvc
CXXSTDLIB_x86_64_pc_windows_msvc = None
cargo:rerun-if-env-changed=HOST_CXXSTDLIB
HOST_CXXSTDLIB = None
cargo:rerun-if-env-changed=CXXSTDLIB
CXXSTDLIB = None
cargo:rustc-link-lib=static=tch
cargo:rustc-link-lib=torch_cpu
cargo:rustc-link-lib=torch
cargo:rustc-link-lib=c10
